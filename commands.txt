Preparation
Clean images / containers locally
Remove images from ECR
Change code back to original (title = vim vs /emacs, no dyn param, no feature)

========================
docker build -t demotiad/vote:0.1 --build-arg version=0.1 vote
docker tag demotiad/vote:0.1 demotiad/vote:latest
docker images

docker inspect --format='{{json .ContainerConfig.Labels}}'  demotiad/vote:0.1 | jq .
docker run --rm demotiad/vote:0.1 cat /Dockerfile

docker-compose -f devsimple-compose.yml up

# Edit app.my change title to Hello TIAD
git status
git commit -am "Change title"
git push

# Go to travis
# Go to ECR

##############
# Create VPC
# Look at created resources
# Create consul cluster
# connect to bastion / consul0

ssh admin@bastion.awsdemo.d2-si.eu -L 8500:consulagent:8500
ssh consul0
consul members

# Look at consul UI

# Create ECS cluster
# Go to ECS UI
# Go to consul UI

ssh ec2-user@ecs0
docker ps
docker run -d -p 6379 redis

# Go to consul UI
ssh ec2-user@ecs1

docker run --rm -it --dns=172.17.0.1 alpine ash
ping redis.service.consul
apk add --no-cache curl jq bind-tools
curl http://172.17.0.1:8500/v1/catalog/service/redis | jq .
dig -t SRV redis.service.consul

ssh ec2-user@ecs0
docker rm -f ...
# Go to consul UI and see service has disappeared


# Deploy backends
# Look at consul UI
# Look at ECS services

# Go to a host with haproxy (based on consul info)
ssh ec2-user@ecsX
docker exec <CID> cat /etc/haproxy/haproxy.cfg
docker exec <CID> cat /etc/haproxy/haproxy.ctmpl

# Let's change default route to green
# Go to consul
docker exec <CID> cat /haproxy/haproxy.cfg

# Remove red route

# Go to ALB / website

# Deploy frontend blue
# Go to website
# Go to consul
# Look at haproxy

# Edit app.py
# uncomment
git commit -am "Dynamic parameters"
git push

# look at travis
# look at consul / ecs

# Use custom head to access blue code
# Test: change title?

# OK: change route

# Toggle feature
